@page
@model ForgotPasswordModel
@{
    ViewData["Title"] = "Forgot your password?";
}

<style>
    .password-reset-container {
        background-color: #f8f9fa;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
    }
    
    .password-reset-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
        padding: 2.5rem;
        max-width: 500px;
        width: 100%;
        border: none;
    }
    
    .password-reset-icon {
        font-size: 3rem;
        color: #4e73df;
        margin-bottom: 1.5rem;
        text-align: center;
    }
    
    h1 {
        color: #2c3e50;
        font-weight: 600;
        margin-bottom: 0.5rem;
        text-align: center;
    }
    
    h2 {
        color: #495057;
        font-size: 1.25rem;
        font-weight: 400;
        margin-bottom: 2rem;
        text-align: center;
    }
    
    .form-floating label {
        color: #6c757d;
        padding: 0.8rem 1rem;
    }
    
    .form-control {
        border-radius: 8px;
        padding: 12px;
        border: 1px solid #ced4da;
        transition: all 0.3s;
    }
    
    .form-control:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    
    .btn-primary {
        background-color: #4e73df;
        border: none;
        border-radius: 8px;
        padding: 12px;
        font-weight: 500;
        transition: all 0.3s;
        margin-top: 1rem;
    }
    
    .btn-primary:hover {
        background-color: #3a5ec0;
        transform: translateY(-2px);
    }
    
    .login-link {
        text-align: center;
        margin-top: 1.5rem;
        color: #6c757d;
    }
    
    .login-link a {
        color: #4e73df;
        text-decoration: none;
        font-weight: 500;
    }
    
    .login-link a:hover {
        text-decoration: underline;
    }
    
    .validation-message {
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
</style>

<div class="password-reset-container">
    <div class="password-reset-card">
        <div class="password-reset-icon">
            <i class="bi bi-shield-lock"></i>
        </div>
        
        <h1>@ViewData["Title"]</h1>
        <h2>Enter your email to reset your password</h2>
        
        <form method="post" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
            
            <div class="form-floating mb-3 position-relative">
                <input asp-for="Input.Email" class="form-control" 
                       autocomplete="username" 
                       aria-required="true" 
                       placeholder="name@example.com"
                        />
                <label asp-for="Input.Email">Email address</label>
                <span asp-validation-for="Input.Email" class="text-danger validation-message"></span>
            </div>
            
            <button type="submit" class="w-100 btn btn-lg btn-primary">
                <i class="bi bi-send-fill me-2"></i>Reset Password
            </button>
            
            <div class="login-link">
                Remembered your password? <a asp-page="./Login">Sign in</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Add real-time validation feedback
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('input', function() {
                if (this.checkValidity()) {
                    this.classList.remove('is-invalid');
                    this.classList.add('is-valid');
                } else {
                    this.classList.remove('is-valid');
                    this.classList.add('is-invalid');
                }
            });
        });
        
        // Add Bootstrap validation classes on submit
        (function () {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}